MCC<- read.csv("/Users/kristen/Documents/2010_Chronic_Conditions_PUF.csv")
dialysis_quality_midwest<- read.csv("/Users/kristen/Documents/dialysis_quality_midwest.csv")
View(dialysis_quality_midwest)
DQM<- read.csv("/Users/kristen/Documents/dialysis_quality_midwest.csv")
View(DQM)
ggplot(DQM,aes(x=Kt.V.Adult.Peritoneal.Dialysis.Performance.Period.Rate)) + geom_histogram()
ggplot(DQM,aes(x=Kt.V.Adult.Peritoneal.Dialysis.Performance.Period.Rate)) + geom_histogram(binwidth=5)
ggplot(DQM,aes(x=Kt.V.Adult.Peritoneal.Dialysis.Performance.Period.Rate)) + geom_histogram(binwidth=20)
ggplot(DQM,aes(x=Kt.V.Adult.Peritoneal.Dialysis.Performance.Period.Rate)) + geom_histogram(binwidth=30)
ggplot(DQM,aes(x=Kt.V.Adult.Peritoneal.Dialysis.Performance.Period.Rate)) + geom_histogram(binwidth=5)
ggplot(DQM,aes(x=Kt.V.Adult.Peritoneal.Dialysis.Performance.Period.Rate)) + geom_density()
ggplot(DQM,aes(x=State,y=Kt.V.Adult.Peritoneal.Dialysis.Performance.Period.Rate)) + geom_boxplot()
ggplot(MCC,aes(x=BENE_AGE_CAT_CD,y= BENE_SEX_IDENT_CD)) + geom_tile()
ggplot(MCC,aes(x=BENE_AGE_CAT_CD,y= BENE_SEX_IDENT_CD)) + geom_bin2d()
ggplot(MCC,aes(x=BENE_AGE_CAT_CD,y= BENE_SEX_IDENT_CD)) + geom_bin2d()
MCC<- read.csv("/Users/kristen/Documents/2010_Chronic_Conditions_PUF.csv")
library(dplyr)
library(ggplot2)
MCC$BENE_SEX_IDENT_CD[MCC$BENE_SEX_IDENT_CD==1] = 'Male'
MCC$BENE_SEX_IDENT_CD[MCC$BENE_SEX_IDENT_CD==2] = 'Female'
MCC$BENE_AGE_CAT_CD[MCC$BENE_AGE_CAT_CD==1] = "Under 65"
MCC$BENE_AGE_CAT_CD[MCC$BENE_AGE_CAT_CD==2] = "65-69"
MCC$BENE_AGE_CAT_CD[MCC$BENE_AGE_CAT_CD==3] = "70-74"
MCC$BENE_AGE_CAT_CD[MCC$BENE_AGE_CAT_CD==4] = "75-79"
MCC$BENE_AGE_CAT_CD[MCC$BENE_AGE_CAT_CD==5] = "80-84"
MCC$BENE_AGE_CAT_CD[MCC$BENE_AGE_CAT_CD==6] = "85 and above"
MCC$CC_DEPRESSN[MCC$CC_DEPRESSN==0] = "Condition does not exist"
MCC$CC_DEPRESSN[MCC$CC_DEPRESSN==1] = "Condition exists"
ggplot(MCC,aes(x=BENE_AGE_CAT_CD,y= BENE_SEX_IDENT_CD)) + geom_bin2d()
ggplot(MCC,aes(x=BENE_AGE_CAT_CD,y= BENE_SEX_IDENT_CD)) + geom_tile()
ggplot(DQM,aes(x=Kt.V.Adult.Hemodialysis.Performance.Period.Rate,y=Kt.V.Adult.Peritoneal.Dialysis.Performance.Period.Rate) + geom_point() + geom_smooth(method=lm)
ggplot(DQM,aes(x=Kt.V.Adult.Hemodialysis.Performance.Period.Rate,y=Kt.V.Adult.Peritoneal.Dialysis.Performance.Period.Rate)) + geom_point() + geom_smooth(method=lm)
ggplot(DQM,aes(x=Kt.V.Adult.Hemodialysis.Performance.Period.Rate,y=Kt.V.Adult.Peritoneal.Dialysis.Performance.Period.Rate)) + geom_point()
ggplot(DQM,aes(x=Kt.V.Adult.Hemodialysis.Performance.Period.Rate,y=Kt.V.Adult.Peritoneal.Dialysis.Performance.Period.Rate)) + geom_point()
ggplot(DQM,aes(x=Kt.V.Adult.Hemodialysis.Performance.Period.Rate,y=Kt.V.Adult.Peritoneal.Dialysis.Performance.Period.Rate)) + geom_point() + geom_line()
ggplot(DQM,aes(x=Kt.V.Adult.Hemodialysis.Performance.Period.Rate,y=Kt.V.Adult.Peritoneal.Dialysis.Performance.Period.Rate)) + geom_point() + geom_smooth()
ggplot(DQM,aes(x=Kt.V.Adult.Hemodialysis.Performance.Period.Rate,y=Kt.V.Adult.Peritoneal.Dialysis.Performance.Period.Rate)) + geom_point() + geom_smooth(method=lm)
ggplot(DQM,aes(x=Kt.V.Adult.Hemodialysis.Performance.Period.Rate,y=Kt.V.Adult.Peritoneal.Dialysis.Performance.Period.Rate)) + geom_jitter() + geom_smooth(method=lm)
ggplot(DQM,aes(x=Kt.V.Adult.Hemodialysis.Performance.Period.Rate,y=Kt.V.Adult.Peritoneal.Dialysis.Performance.Period.Rate)) + geom_point() + geom_smooth(method=lm)
ggplot(DQM,aes(x=Kt.V.Adult.Hemodialysis.Performance.Period.Rate,y=Kt.V.Adult.Peritoneal.Dialysis.Performance.Period.Rate)) + geom_jitter() + geom_smooth(method=lm)
#' ggplot(MCC,aes(x=BENE_AGE_CAT_CD,fill=CC_DEPRESSN)) + geom_bar()
ggplot(MCC,aes(x=BENE_AGE_CAT_CD,fill=CC_DEPRESSN)) + geom_bar()
ggplot(MCC,aes(x=BENE_AGE_CAT_CD,fill=percentage(CC_DEPRESSN))) + geom_bar()
import scales
load
load(scales)
load("scales")
library(scales)
library(scales)
MCC %>% group_by(BENE_AGE_CAT_CD,CC_DEPRESSN) %>% summarize(total_per_age_depvalue=n())
MCC %>% group_by(BENE_AGE_CAT_CD,CC_DEPRESSN) %>% summarize(total_per_age_depvalue=n()) %>%
filter(CC_DEPRESSN ==1 | CC_DEPRESSN==0) %>% mutate(total=sum(total_per_age_depvalue)) %>%
filter(CC_DEPRESSN == 1) %>% mutate(chance_of_dep=(total_per_age_depvalue/total)*100)
help(geom_bar)
ggplot(MCC,aes(x=BENE_AGE_CAT_CD,fill=CC_DEPRESSN)) + geom_bar(stat=percent())
ggplot(MCC,aes(x=BENE_AGE_CAT_CD,fill=CC_DEPRESSN)) + geom_bar(stat=percent)
ggplot(MCC,aes(x=BENE_AGE_CAT_CD,fill=CC_DEPRESSN)) + geom_bar(stat=percent(CC_DEPRESSN))
ggplot(MCC,aes(x=BENE_AGE_CAT_CD,fill=CC_DEPRESSN)) + geom_bar(stat=percent(MCC$CC_DEPRESSN))
scale
ggplot(patients,aes(x=age,y=sbp,color=paytype)) + geom_jitter(size=3) + scale_color_brewer(palette='Set3')
ggplot(MCC,aes(x=BENE_AGE_CAT_CD,fill=CC_DEPRESSN)) + geom_bar(stat="identity")
ggplot(MCC,aes(x=BENE_AGE_CAT_CD,y=CC_DEPRESSN, fill=CC_DEPRESSN)) + geom_bar(stat="identity")
ggplot(MCC,aes(x=BENE_AGE_CAT_CD,y=CC_DEPRESSN)) + geom_bar(stat="identity")
ggplot(MCC,aes(x=BENE_AGE_CAT_CD,fill=(percentage(CC_DEPRESSN)) + geom_bar()
ggplot(MCC,aes(x=BENE_AGE_CAT_CD,fill=(percentage(CC_DEPRESSN))) + geom_bar()
ggplot(MCC,aes(x=BENE_AGE_CAT_CD,fill=(percentage(CC_DEPRESSN)))) + geom_bar()
ggplot(MCC,aes(x=BENE_AGE_CAT_CD,fill=(CC_DEPRESSN))) + geom_bar()
help(geom_label)
ggplot(MCC,aes(x=BENE_AGE_CAT_CD,fill=(CC_DEPRESSN))) + geom_bar(aes(y=(..count..)/sum(..count..)))
ggplot(MCC,aes(x=BENE_AGE_CAT_CD,fill=(CC_DEPRESSN),=amount/sum(amount)*100)) + geom_bar()
ggplot(MCC,aes(x=BENE_AGE_CAT_CD,fill=(CC_DEPRESSN),y=amount/sum(amount)*100)) + geom_bar()
ggplot(MCC,aes(x=BENE_AGE_CAT_CD,fill=(CC_DEPRESSN),position="fill") + geom_bar()
ggplot(MCC,aes(x=BENE_AGE_CAT_CD,fill=(CC_DEPRESSN),position="fill") + geom_bar()
ggplot(MCC,aes(x=BENE_AGE_CAT_CD,fill=(CC_DEPRESSN)) + geom_bar(position="fill")
ggplot(MCC,aes(x=BENE_AGE_CAT_CD,fill=(CC_DEPRESSN))) + geom_bar(position="fill")
ggplot(MCC,aes(x=BENE_AGE_CAT_CD,fill=(CC_DEPRESSN),position="fill")) + geom_bar()
help(geom_bar)
ggplot(MCC,aes(x=BENE_AGE_CAT_CD,fill=(CC_DEPRESSN),position="fill")) + geom_bar(stat="identity")
help(geom_bar)
ggplot(MCC,aes(x=BENE_AGE_CAT_CD,fill=(CC_DEPRESSN)) + geom_bar(position="fill")
ggplot(MCC,aes(x=BENE_AGE_CAT_CD,fill=(CC_DEPRESSN))() + geom_bar(position="fill")
ggplot(MCC,aes(x=BENE_AGE_CAT_CD,fill=(CC_DEPRESSN))) + geom_bar(position="fill")
MCC$CC_DEPRESSN[MCC$CC_DEPRESSN==is.na()] = "Condition exists"
MCC$CC_DEPRESSN[MCC$CC_DEPRESSN==anyNA()] = "Condition exists"
MCC$CC_DEPRESSN[is.NA(MCC$CC_DEPRESSN)] = "Condition exists"
MCC$CC_DEPRESSN[is.na(MCC$CC_DEPRESSN)] = "Condition exists"
MCC$CC_DEPRESSN[is.na(MCC$CC_DEPRESSN)] = "Suppressed"
View(MCC)
MCC<- read.csv("/Users/kristen/Documents/2010_Chronic_Conditions_PUF.csv")
#' View(MCC)
library(dplyr)
library(ggplot2)
library(scales)
#' 6. Recode the BENE_SEX_IDENT_CD, BENE_AGE_CAT_CD, and CC_DEPRESSN values into strings that carry
#'  meaning (e.g., values for BENE_SEX_IDENT_CD should be “Male” and “Female,” and apply a similar
#'  approach to the other two).
MCC$BENE_SEX_IDENT_CD[MCC$BENE_SEX_IDENT_CD==1] = 'Male'
MCC$BENE_SEX_IDENT_CD[MCC$BENE_SEX_IDENT_CD==2] = 'Female'
MCC$BENE_AGE_CAT_CD[MCC$BENE_AGE_CAT_CD==1] = "Under 65"
MCC$BENE_AGE_CAT_CD[MCC$BENE_AGE_CAT_CD==2] = "65-69"
MCC$BENE_AGE_CAT_CD[MCC$BENE_AGE_CAT_CD==3] = "70-74"
MCC$BENE_AGE_CAT_CD[MCC$BENE_AGE_CAT_CD==4] = "75-79"
MCC$BENE_AGE_CAT_CD[MCC$BENE_AGE_CAT_CD==5] = "80-84"
MCC$BENE_AGE_CAT_CD[MCC$BENE_AGE_CAT_CD==6] = "85 and above"
MCC$CC_DEPRESSN[MCC$CC_DEPRESSN==0] = "Condition does not exist"
MCC$CC_DEPRESSN[MCC$CC_DEPRESSN==1] = "Condition exists"
MCC$CC_DEPRESSN[is.na(MCC$CC_DEPRESSN)] = "Suppressed"
View(MCC)
ggplot(MCC,aes(x=BENE_SEX_IDENT_CD)) + geom_bar()
ggplot(MCC,aes(x=BENE_AGE_CAT_CD,fill=BENE_SEX_IDENT_CD)) + geom_bar()
ggplot(MCC,aes(x=BENE_AGE_CAT_CD,y= BENE_SEX_IDENT_CD)) + geom_bin2d()
ggplot(MCC,aes(x=BENE_AGE_CAT_CD,y=BENE_SEX_IDENT_CD)) + geom_count() + geom_jitter(alpha=1/8)
ggplot(MCC,aes(x=BENE_AGE_CAT_CD,fill=CC_DEPRESSN)) + geom_bar(position="dodge")
ggplot(MCC,aes(x=BENE_AGE_CAT_CD,fill=(CC_DEPRESSN))) + geom_bar(position="fill")
DQM<- read.csv("/Users/kristen/Documents/dialysis_quality_midwest.csv")
ggplot(DQM,aes(x=Kt.V.Adult.Peritoneal.Dialysis.Performance.Period.Rate)) + geom_histogram(binwidth=5)
ggplot(DQM,aes(x=Kt.V.Adult.Peritoneal.Dialysis.Performance.Period.Rate)) + geom_density()
ggplot(DQM,aes(x=State,y=Kt.V.Adult.Peritoneal.Dialysis.Performance.Period.Rate)) + geom_boxplot()
ggplot(DQM,aes(x=Kt.V.Adult.Hemodialysis.Performance.Period.Rate,y=Kt.V.Adult.Peritoneal.Dialysis.Performance.Period.Rate)) + geom_jitter() + geom_smooth(method=lm)
#'---
#' title: Homework 4
#' author: Kristen McGarry
#' due date: 11/14/2016
#' ---
#'
#' 1. Which two aspects of a plot are easiest for perceiving differences when visualizing
#'continuous data? How about for categorical data?
#' For continuous data, position is the most powerful way for percieving differences, but other helpful aspects include length, slope, angle, and volume.
#' For categorical data, position and queue are helpful aspects for easily percieving differences.
#' 2. What is overplotting? What are 2 strategies for dealing with it?
#' Overplotting is where the data plot is not easily distinguishable, making it difficult to determine where the mass of the data is.
#' Strategies to deal with overlplotting are geom_point(position='jitter') or geom_jitter() and altering alpha (opacity).
#' 3. What are two types of geometric objects (geoms) you can use to show the relationship
#'  between two categorical variables?
#'  geom_count() and geom_bin2d()
#' 4. What are two types of geometric objects (geoms) you can use to show the relationship
#'  between two continuous variables?
#'  geom_point() and geom_smooth()
#' 5. What are two types of geometric objects (geoms) you can use to show the relationship between a
#' categorical and a continuous variable?
#' geom_bar() or geom_boxplot()
MCC<- read.csv("/Users/kristen/Documents/2010_Chronic_Conditions_PUF.csv")
#' View(MCC)
library(dplyr)
library(ggplot2)
#' 6. Recode the BENE_SEX_IDENT_CD, BENE_AGE_CAT_CD, and CC_DEPRESSN values into strings that carry
#'  meaning (e.g., values for BENE_SEX_IDENT_CD should be “Male” and “Female,” and apply a similar
#'  approach to the other two).
MCC$BENE_SEX_IDENT_CD[MCC$BENE_SEX_IDENT_CD==1] = 'Male'
MCC$BENE_SEX_IDENT_CD[MCC$BENE_SEX_IDENT_CD==2] = 'Female'
MCC$BENE_AGE_CAT_CD[MCC$BENE_AGE_CAT_CD==1] = "Under 65"
MCC$BENE_AGE_CAT_CD[MCC$BENE_AGE_CAT_CD==2] = "65-69"
MCC$BENE_AGE_CAT_CD[MCC$BENE_AGE_CAT_CD==3] = "70-74"
MCC$BENE_AGE_CAT_CD[MCC$BENE_AGE_CAT_CD==4] = "75-79"
MCC$BENE_AGE_CAT_CD[MCC$BENE_AGE_CAT_CD==5] = "80-84"
MCC$BENE_AGE_CAT_CD[MCC$BENE_AGE_CAT_CD==6] = "85 and above"
MCC$CC_DEPRESSN[MCC$CC_DEPRESSN==0] = "Condition does not exist"
MCC$CC_DEPRESSN[MCC$CC_DEPRESSN==1] = "Condition exists"
MCC$CC_DEPRESSN[is.na(MCC$CC_DEPRESSN)] = "Suppressed"
#'Each question is answered by a single plot (based on the instructions). You don’t need to actually
#'answer the question. You just need to generate a plot unless explicitly asked to explain something.
#'7. How many men and women are in the dataset?
#'Draw a bar plot with a bar for men and a bar for women, with the height indicative of the number of men and women
ggplot(MCC,aes(x=BENE_SEX_IDENT_CD)) + geom_bar()
#' 8. How many men and women are in each age category?
#' Draw a bar plot where there is a single bar for each age category, and the sexes are filled in
#'  with different colors for each bar
#'  The height of the bar should reflect the total number of people in each age category
ggplot(MCC,aes(x=BENE_AGE_CAT_CD,fill=BENE_SEX_IDENT_CD)) + geom_bar()
#' 9. Which combination of gender and age category is most common? Which is least common?
#' Draw a “heat map” that demonstrates the answer to this question
ggplot(MCC,aes(x=BENE_AGE_CAT_CD,y= BENE_SEX_IDENT_CD)) + geom_bin2d()
#' 10. Now, show a plot that uses points only (instead of fill colors) to demonstrate the same
#' information from the heat map. Multiple points should be visible for each category. 8 points
#' should need to overlap before a completely black dot is visible
ggplot(MCC,aes(x=BENE_AGE_CAT_CD,y=BENE_SEX_IDENT_CD)) + geom_count() + geom_jitter(alpha=1/8)
#' 11. Which age category has the highest prevalence of depression (most number of people)?
#' Draw a bar plot where the x-axis indicates age category and the fill color indicates presence of depression
#' Set the position to “dodge.” E.g., geom_bar(position = ‘dodge’)
#' Explain how this plot is different from that in question 8 (other than the variables used).
#' In other words, what does setting the position to ’dodge’ do?
ggplot(MCC,aes(x=BENE_AGE_CAT_CD,fill=CC_DEPRESSN)) + geom_bar(position="dodge")
#' In 8 the sex categories are stacked in a single bar. In 11, each category is given its own bar, so dodge spreads out the categorical variables instead of stacking them.
#' 12.Which age category is most likely to suffer from depression (based on the percentage of people with depression in each group)?
#' Draw a bar plot where there is a single bar for each age category, and the presence of depression is filled in with different colors
#' Each bar should be the same height, so that the height of each fill color is indicative of the percentage
ggplot(MCC,aes(x=BENE_AGE_CAT_CD,fill=(CC_DEPRESSN))) + geom_bar(position="fill")
DQM<- read.csv("/Users/kristen/Documents/dialysis_quality_midwest.csv")
#' View(DQM)
#' 13. What is the distribution of peritoneal dialysis performance?
#' Plot a histogram AND a density plot (in two separate plots) to explore the distribution of this variable
#' Answer this: Is the distribution left-skewed, not skewed, or right-skewed?
ggplot(DQM,aes(x=Kt.V.Adult.Peritoneal.Dialysis.Performance.Period.Rate)) + geom_histogram(binwidth=5)
ggplot(DQM,aes(x=Kt.V.Adult.Peritoneal.Dialysis.Performance.Period.Rate)) + geom_density()
#' The data distribution for peritoneal dialysis performance is right-skewed.
#' 14. Does peritoneal dialysis performance differ by state?
#' Plot a boxplot where the x-axis contains the state and the y-axis contains the peritoneal dialysis performance.
ggplot(DQM,aes(x=State,y=Kt.V.Adult.Peritoneal.Dialysis.Performance.Period.Rate)) + geom_boxplot()
#' 15. What is the relationship between hemodialysis performance and peritoneal dialysis performance?
#' Draw a scatterplot with hemodialysis performance on the x-axis and peritoneal dialysis on the y-axis
#' Draw a best-fit line (not a curve) to demonstrate the relationship
ggplot(DQM,aes(x=Kt.V.Adult.Hemodialysis.Performance.Period.Rate,y=Kt.V.Adult.Peritoneal.Dialysis.Performance.Period.Rate)) + geom_jitter() + geom_smooth(method=lm)
library(dplyr)
library(foreach)
install.packages(foeach)
install.packages(foreach)
install.packages("doParallel")
library(foreach)
install.packages("foreach")
install.packages("foreach")
library(dplyr)
library(foreach)
library(doParallel)
parallel::detectCores()
library(dplyr)
library(ggplot2)
library(tidyr)
bcw <- read.csv("breast-cancer-wisconsin.data.txt",header=TRUE,sep=",",row.names=NULL, na.strings = "?")
bcw <- read.csv("/Users/kristen/Desktop/breast-cancer-wisconsin.data.txt",header=TRUE,sep=",",row.names=NULL, na.strings = "?")
bcw <- rename(bcw, id_number = X1000025)
bcw <- rename(bcw, clump_thickness = X5)
bcw <- rename(bcw, cell_size_uniformity = X1)
bcw <- rename(bcw, cell_shape_uniformity = X1.1)
bcw <- rename(bcw, marginal_adhesion = X1.2)
bcw <- rename(bcw, single_epithelial_cell_size = X2)
bcw <- rename(bcw, bare_nuclei = X1.3)
bcw <- rename(bcw, bland_chromatin = X3)
bcw <- rename(bcw, normal_nucleoli = X1.4)
bcw <- rename(bcw, mitoses = X1.5)
bcw <- rename(bcw, tumor_class = X2.1)
ggplot(bcw,aes(x=clump_thickness,fill=(tumor_class))) + geom_bar() + position_fill()
ggplot(bcw,aes(x=cell_size_uniformity,fill=(tumor_class))) + geom_bar(position='fill')
MCC<- read.csv("/Users/kristen/Documents/2010_Chronic_Conditions_PUF.csv")
library(dplyr)
library(ggplot2)
MCC$BENE_SEX_IDENT_CD[MCC$BENE_SEX_IDENT_CD==1] = 'Male'
MCC$BENE_SEX_IDENT_CD[MCC$BENE_SEX_IDENT_CD==2] = 'Female'
MCC$BENE_AGE_CAT_CD[MCC$BENE_AGE_CAT_CD==1] = "Under 65"
MCC$BENE_AGE_CAT_CD[MCC$BENE_AGE_CAT_CD==2] = "65-69"
MCC$BENE_AGE_CAT_CD[MCC$BENE_AGE_CAT_CD==3] = "70-74"
MCC$BENE_AGE_CAT_CD[MCC$BENE_AGE_CAT_CD==4] = "75-79"
MCC$BENE_AGE_CAT_CD[MCC$BENE_AGE_CAT_CD==5] = "80-84"
MCC$BENE_AGE_CAT_CD[MCC$BENE_AGE_CAT_CD==6] = "85 and above"
MCC$CC_DEPRESSN[MCC$CC_DEPRESSN==0] = "Condition does not exist"
MCC$CC_DEPRESSN[MCC$CC_DEPRESSN==1] = "Condition exists"
MCC$CC_DEPRESSN[is.na(MCC$CC_DEPRESSN)] = "Suppressed"
#'Each question is answered by a single plot (based on the instructions). You don’t need to actually
#'answer the question. You just need to generate a plot unless explicitly asked to explain something.
#'7. How many men and women are in the dataset?
#'Draw a bar plot with a bar for men and a bar for women, with the height indicative of the number of men and women
ggplot(MCC,aes(x=BENE_SEX_IDENT_CD)) + geom_bar()
ggplot(MCC,aes(x=BENE_AGE_CAT_CD,fill=BENE_SEX_IDENT_CD)) + geom_bar()
ggplot(bcw,aes(x=clump_thickness,fill=tumor_class)) + geom_bar()
ggplot(MCC,aes(x=BENE_AGE_CAT_CD,fill=BENE_SEX_IDENT_CD)) + geom_bar()
ggplot(bcw,aes(x=cell_size_uniformity,fill=(tumor_class))) + geom_bar(position='fill')
ggplot(MCC,aes(x=BENE_AGE_CAT_CD,y= BENE_SEX_IDENT_CD)) + geom_bin2d()
ggplot(MCC,aes(x=BENE_AGE_CAT_CD,y=BENE_SEX_IDENT_CD)) + geom_count() + geom_jitter(alpha=1/8)
ggplot(MCC,aes(x=BENE_AGE_CAT_CD,fill=CC_DEPRESSN)) + geom_bar(position="dodge")
ggplot(MCC,aes(x=BENE_AGE_CAT_CD,fill=(CC_DEPRESSN))) + geom_bar(position="fill")
ggplot(bcw,aes(x=clump_thickness,fill=(tumor_class))) + geom_bar(position = "fill")
quit()
library(dplyr)
library(ggplot2)
bcw <- read.csv("/Users/kristen/Desktop/breast-cancer-wisconsin.data.txt",header=TRUE,sep=",",row.names=NULL, na.strings = "?")
bcw <- rename(bcw, id_number = X1000025)
bcw <- rename(bcw, clump_thickness = X5)
bcw <- rename(bcw, cell_size_uniformity = X1)
bcw <- rename(bcw, cell_shape_uniformity = X1.1)
bcw <- rename(bcw, marginal_adhesion = X1.2)
bcw <- rename(bcw, single_epithelial_cell_size = X2)
bcw <- rename(bcw, bare_nuclei = X1.3)
bcw <- rename(bcw, bland_chromatin = X3)
bcw <- rename(bcw, normal_nucleoli = X1.4)
bcw <- rename(bcw, mitoses = X1.5)
bcw <- rename(bcw, tumor_class = X2.1)
ggplot(MCC,aes(x=BENE_AGE_CAT_CD,fill=(CC_DEPRESSN))) + geom_bar(position="fill")
ggplot(bcw,aes(x=clump_thickness,fill=(tumor_class))) + geom_bar(position = "fill")
library(tidyr)
ggplot(bcw,aes(x=clump_thickness,fill=(tumor_class))) + geom_bar(position = "fill")
ggplot(bcw,aes(x=clump_thickness,fill=(tumor_class))) + geom_area(position = "fill")
ggplot(bcw,aes(x=clump_thickness,fill=(tumor_class))) + geom_bar(position = "fill")
library(dplyr)
library(ggplot2)
library(tidyr)
library(mlr)
#' 1a. overcast: (4 yes/4 total) Yes
#' 1b. sunny: (2 yes/4 total). Maybe
#' 2a. Decision Trees: ix-probabilistic, v-information gain, i. axis-parallel (boundaries), viii.linear (boundaries), xiv. thresholds
#' 2b. Decision Rules: ii-confidence, viii. maximum-margin
#' 2c. Logistic Regression: i-axis-parallel, x. sigmoid, si. smoothing
#' 2d. Naive Bayes: ix-probabilistic
#' 2e. Nearest Neighbor: vi-lazy, ix-probabilistic, iv-Euclidean distance
#' 2f. Perceptron: vii-linear, xiv-thresholds, iii-convergence guarantee, x. sigmoid, xiv. threshold, xv-weight vector
#' 2g. Support Vector Machines: vii-linear, xii-support vector, viii-maximum margin
#' 3.
#' (b) decision trees- rpart package
#' (d) neural network- nnet package
#' (e) Random forest- randomForestSRC package
#' 4.
bcw <- read.csv("/Users/kristen/Desktop/breast-cancer-wisconsin.data.txt",header=TRUE,sep=",",row.names=NULL, na.strings = "?")
#'View(bcw)
#' 5. Give the columns in the data frames appropriate names using dplyr and the rename() function.
bcw <- rename(bcw, id_number = X1000025)
bcw <- rename(bcw, clump_thickness = X5)
bcw <- rename(bcw, cell_size_uniformity = X1)
bcw <- rename(bcw, cell_shape_uniformity = X1.1)
bcw <- rename(bcw, marginal_adhesion = X1.2)
bcw <- rename(bcw, single_epithelial_cell_size = X2)
bcw <- rename(bcw, bare_nuclei = X1.3)
bcw <- rename(bcw, bland_chromatin = X3)
bcw <- rename(bcw, normal_nucleoli = X1.4)
bcw <- rename(bcw, mitoses = X1.5)
bcw <- rename(bcw, tumor_class = X2.1)
#'6. Keep all columns that are appropriate for supervised learning and remove any columns that are not appropriate.
#'If you decide to keep all variables, explain why. If you decide to remove any variables, explain why.
#' I decided to keep all varaibles because it apears that there is a relationship in each variable with respect to benign or malignant outcomes.
#' The general observed trend, is as the values increase towards 10, the number of malignant tumors likewise increases.
ggplot(bcw,aes(x=clump_thickness,fill=tumor_class) + geom_bar(position = "fill")
bcw$tumor_class[bcw$tumor_class==2] = 'benign'
bcw$tumor_class[bcw$tumor_class==4] = 'malignant'
bcw$tumor_class[bcw$tumor_class==2] = 'benign'
ggplot(bcw,aes(x=clump_thickness,fill=tumor_class)) + geom_bar(position = "fill")
ggplot(bcw,aes(x=cell_shape_uniformity,fill=(tumor_class))) + geom_bar(position='fill')
library(dplyr)
library(ggplot2)
library(tidyr)
library(mlr)
bcw <- read.csv("/Users/kristen/Desktop/breast-cancer-wisconsin.data.txt",header=TRUE,sep=",",row.names=NULL, na.strings = "?")
bcw <- rename(bcw, id_number = X1000025)
bcw <- rename(bcw, clump_thickness = X5)
bcw <- rename(bcw, cell_size_uniformity = X1)
bcw <- rename(bcw, cell_shape_uniformity = X1.1)
bcw <- rename(bcw, marginal_adhesion = X1.2)
bcw <- rename(bcw, single_epithelial_cell_size = X2)
bcw <- rename(bcw, bare_nuclei = X1.3)
bcw <- rename(bcw, bland_chromatin = X3)
bcw <- rename(bcw, normal_nucleoli = X1.4)
bcw <- rename(bcw, mitoses = X1.5)
bcw <- rename(bcw, tumor_class = X2.1)
bcw$tumor_class[bcw$tumor_class==2] = 'benign'
bcw$tumor_class[bcw$tumor_class==4] = 'malignant'
bcw$id_number <- NULL
View(bcw)
install.packages("stringr")
library(stringr)
er_data = data_frame(file_name = dir ('Users/kristen/Desktop/mtsamples_emergency', full.names = TRUE)) %>%
mutate(text=map_chr(file_name,read_file))
library(stringr)
er_data = data_frame(file_name = dir('Users/kristen/Desktop/mtsamples_emergency', full.names = TRUE)) %>%
mutate(text=map_chr(file_name,read_file))
er_data = data.frame(file_name = dir('Users/kristen/Desktop/mtsamples_emergency', full.names = TRUE)) %>%
mutate(text=map_chr(file_name,read_file))
er_data = data_frame(file_name = dir('Users/kristen/Desktop/mtsamples_emergency', full.names = TRUE)) %>%
mutate(text=map_chr(file_name,read_file))
library(stringr)
library(dplyr)
er_data = data_frame(file_name = dir('Users/kristen/Desktop/mtsamples_emergency', full.names = TRUE)) %>%
mutate(text=map_chr(file_name,read_file))
help(map_chr)
library(stringr)
library(dplyr)
er_data = data_frame(file_name = dir('Users/kristen/Desktop/mtsamples_emergency', full.names = TRUE)) %>%
mutate(text=map_chr(file_name,read_file))
library(purr)
install.packages("purr")
install.packages("purrr")
library(purrr)
er_data = data_frame(file_name = dir('Users/kristen/Desktop/mtsamples_emergency', full.names = TRUE)) %>%
mutate(text=map_chr(file_name,read_file))
getwd()
er_data = data_frame(file_name = dir('./Desktop/mtsamples_emergency', full.names = TRUE)) %>%
mutate(text=map_chr(file_name,read_file))
help("map_chr")
library(tidyverse)
install.packages("tidyverse")
library(tidyverse)
er_data = data_frame(file_name = dir('./Desktop/mtsamples_emergency', full.names = TRUE)) %>%
mutate(text=map_chr(file_name,read_file))
help("map_chr")
str_view_all(echo_report$text,
regex('admit', ignore_case=TRUE))
str_view_all(er_data$text,
regex('admit', ignore_case=TRUE))
er_data
str_view_all(er_data$text,
regex('admit',ignore_case=TRUE))
help(htmlwidgets)
str_match(er_data$text,
regex('admit',ignore_case=TRUE))
str_match(er_data$text,
regex('admit',ignore_case=TRUE)) %>% as.data.frame()
er_data
str_match(er_data$text,
regex('admit',ignore_case=TRUE)) %>% View()
er_data %>% mutate(admitted = str_detect(text,
regex('admit',ignore_case=TRUE)) %>% View()
er_data %>% mutate(admitted = str_detect(text,
regex('admit',ignore_case=TRUE)) %>% View())
str_detect(er_data$text,
regex('admit',ignore_case=TRUE)) %>% View()
str_detect(er_data$text,
regex('admit'|'transferred',ignore_case=TRUE)) %>% View()
regex('admit',ignore_case=TRUE)) | regex('transferred',ignore_case=TRUE) %>% View()
str_detect(er_data$text,
regex('admit',ignore_case=TRUE) | regex('transferred',ignore_case=TRUE)) %>% View()
str_detect(er_data$text,
regex('admit|transferred',ignore_case=TRUE)) %>% View()
str_detect(er_data$text,
regex('admitted|transferred',ignore_case=TRUE)) %>% View()
err_data %>% mutate(str_detect(er_data$text,
regex('admitted|transferred',ignore_case=TRUE))) %>% View()
er_data %>% mutate(str_detect(er_data$text,
regex('admitted|transferred',ignore_case=TRUE))) %>% View()
er_data %>% mutate(admission = str_detect(er_data$text,
regex('admitted|transferred',ignore_case=TRUE))) %>% View()
str_match(er_data$text,
regex('reason',ignore_case=TRUE))
regex('chief complaint|reason',ignore_case=TRUE))
str_match(er_data$text,
regex('chief|reason',ignore_case=TRUE))
str_match(er_data$text,
regex('chief|reason|complaint',ignore_case=TRUE))
regex('chief complaint|reason|complaint',ignore_case=TRUE))
regex('chief[]complaint|reason|complaint',ignore_case=TRUE))
regex('chief[blank]complaint',ignore_case=TRUE))
regex('chief\\scomplaint',ignore_case=TRUE))
regex('chief'\\s'complaint',ignore_case=TRUE))
regex('chief\\scomplaint',ignore_case=TRUE))
regex('chief(\\s)complaint',ignore_case=TRUE))
regex('chief \\s complaint',ignore_case=TRUE))
str_match(er_data$text,
regex('chief \\s complaint', ignore_case=TRUE))
regex('chief  complaint', ignore_case=TRUE))
library(stringr)
str_match(er_data$text,
regex('chief \\s complaint', ignore_case=TRUE))
regex('CHIEF \\s COMPLAINT', ignore_case=TRUE))
str_match(er_data$text,
regex('CHIEF \\s COMPLAINT', ignore_case=TRUE))
regex('CHIEF blank COMPLAINT', ignore_case=TRUE))
str_match(er_data$text,
regex('CHIEF blank COMPLAINT', ignore_case=TRUE))
str_match(er_data$text,
regex('CHIEF COMPLAINT', ignore_case=TRUE))
str_match(er_data$text,
regex('CHIEF COMPLAINT:', ignore_case=TRUE))
regex('CHIEF COMPLAINT: ?=', ignore_case=TRUE))
str_match(er_data$text,
regex('CHIEF COMPLAINT: ?=', ignore_case=TRUE))
matches = str_match(er_data$text,
regex('CHIEF COMPLAINT:', ignore_case=TRUE))
matches
str_locate(er_data$text,
regex('CHIEF COMPLAINT:', ignore_case=TRUE))
er_data$text[16:20]
location = str_locate(er_data$text,
regex('CHIEF COMPLAINT:', ignore_case=TRUE))
location = str_locate(er_data$text,
regex('CHIEF COMPLAINT:', ignore_case=TRUE))
library(stringr)
location$end
location
location[end]
str_match(er_data$text,
regex('CHIEF COMPLAINT:[A-z]+', ignore_case=TRUE))
str_match(text,regex('complaint|admitting diagnosis | consultation:.*')
str_match(er_data$text,
regex('complaint|admitting diagnosis | consultation:.*', ignore_case=TRUE))
str_match(er_data$text,
regex('complaint|admitting diagnosis|consultation:.*', ignore_case=TRUE))
str_match(er_data$text,
regex('(complaint|admitting diagnosis|consultation):.*', ignore_case=TRUE))
str_match(er_data$text,
regex('(complaint|admitting diagnosis|consultation)(:.*)', ignore_case=TRUE))
MFQ <- read.table('questions.txt',sep = '\t',header=FALSE,na.strings = "NA",fill=TRUE,quote = "")
getwd
getwd()
setwd("/Users/kristen/Development/nlp_project/forums")
setwd("/Users/kristen/Development/nlp_project")
MFQ <- read.table('questions.txt',sep = '\t',header=FALSE,na.strings = "NA",fill=TRUE,quote = "")
MFC <- read.table('comments.txt',sep = '\t',header=FALSE,na.strings = "NA",fill=TRUE,quote = "")
library(dplyr)
library(tidyr)
View(MFQ)
splitMFQ <- split(MFQ, MFQ$V4)
View(splitMFQ)
MLH <- splitMFQ[[1]]
GH <- splitMFQ[[2]]
DH <- splitMFQ[[3]]
ADH <- splitMFQ[[4]]
CH <- splitMFQ[[5]]
View(splitMFQ)
MLH_text <- data.frame(MLH$V1,MLH$V7)
GH_text <- data.frame(GH$V1,GH$V7)
DH_text <- data.frame(DH$V1,DH$V7)
ADH_text <- data.frame(ADH$V1,ADH$V7)
CH_text <- data.frame(CH$V1,CH$V7)
library(rjson)
packages.install(rjson)
packages.install("rjson")
install.packages("rjson")
library(rjson)
sink("json.txt")
cat(toJSON(MLH_text))
sink()
file.show("json.txt")
View(CH_text)
write.table(MLH_text, file = "MLH_text.json", sep = "\n")
write.table(GH_text, file = "GH_text.txt", sep = "&&&")
write.table(ADH_text, file = "ADH_text.txt", sep = "&&&")
write.table(CH_text, file = "CH_text.txt", sep = "&&&")
write.table(ADH_text, file = "ADH_text.txt", sep = "&&&")
